
/**
 * Created by prabhadi on 01-Jul-15.
 */


app.controller('visaTypePaymentCtrl', ['$scope','$state', '$location', '$http', '$localStorage','$document','$dialogs', function ($scope, $state, $location, $http, $localStorage,$document,$dialogs) {
    $scope.date1 = $localStorage.dateTime;
    $scope.gwfNo = $localStorage.gwfNo;
    $scope.Category = $localStorage.categDetails;
    $scope.categDetails = $localStorage.categDetails;
    $scope.n = 0; //$localStorage.UPSdata;
    $scope.sum = 0.00;


    $scope.data = $localStorage.UPSdata;


    $localStorage.CourierSelected = false;

    //console.log($localStorage.originalDetails.UPS);
    //$scope.selectedUPS = $localStorage.originalDetails.UPS;

    if($scope.selectedUPS == null){
        $scope.showOnline = false;
    }else{
        $scope.showOnline = true;
    }
    function clone(obj) {
        // Handle the 3 simple types, and null or undefined
        if (null == obj || "object" != typeof obj) return obj;

        if (obj instanceof Date) {
            var copy = new Date();
            copy.setTime(obj.getTime());
            return copy;
        }

        if (obj instanceof Array) {
            var copy = [];
            for (var i = 0, len = obj.length; i < len; i++) {
                copy[i] = clone(obj[i]);
            }
            return copy;
        }

        if (obj instanceof Object) {
            var copy = {};
            for (var attr in obj) {
                if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);
            }
            return copy;
        }

        throw new Error("Unable to copy obj! Its type isn't supported.");
    }

    $scope.resultData = clone($scope.data);

    $scope.resultDataOriginal = clone($scope.resultData);

    $localStorage.CourierSelected = false;
    $scope.jsonObj ={};
    $scope.jsonObj.items = [];
    $scope.allObj = {};
    $scope.allObj.items = [];
    $scope.blocked = [];
    $scope.checked = [];
    $scope.clicked = [];
    $scope.notClicked = [];
    $scope.selectedItems = [];
    var i;
    $scope.UPSTotal = 0.00;
    $scope.GST = 0.00;
    $scope.TA = 0.00;

    for(i=0; i<$scope.jsonObj.items.length;i++) {
        $scope.jsonObj.items.splice(i, 1);
    }


    angular.forEach($scope.selectedUPS, function(selectedUPS) {
        angular.forEach($scope.resultData, function (rdItem) {
            //$scope.checked[selectedUPS.ServiceName] = true;
            $scope.blocked[selectedUPS.ServiceName] = true;
        });
    });


    $scope.hasComplimentary = function(row){
        angular.forEach(row.FreeServicesList, function(freeSL) {
            $scope.checked[freeSL.ServiceName] = true;
            $scope.blocked[freeSL.ServiceName] = true;

            angular.forEach($scope.resultData, function(rdItem) {
                if(freeSL.ServiceName === rdItem.ServiceName){
                    rdItem.ServicePrice = '0.0000';
                    if(rdItem.HasComplimentary === true){
                        $scope.hasComplimentary(rdItem);
                    }
                }
            });
        });
    };

    $scope.removeComplimentary = function(row){
        var i;
        //$scope.sum = parseFloat($scope.sum) - parseFloat(row.ServicePrice);
        console.log( $scope.checked["VFS Provided Courier Service"]);
        angular.forEach(row.FreeServicesList, function(freeSL) {
            if($scope.clicked.length == 0){
                $scope.checked[freeSL.ServiceName] = false;
                $scope.blocked[freeSL.ServiceName] = false;
            }

            for(i=0; i<$scope.clicked.length;i++)
            {
                if(freeSL.ServiceName === $scope.clicked[i]){
                    $scope.checked[freeSL.ServiceName] = true;
                    $scope.blocked[freeSL.ServiceName] = false;
                    break;

                }else{
                    console.log(freeSL.ServiceName);
                    console.log( $scope.checked[freeSL.ServiceName]);
                    $scope.checked[freeSL.ServiceName] = false;
                    $scope.blocked[freeSL.ServiceName] = false;
                    console.log( $scope.checked);
                    console.log($scope.blocked);
                }
            }
            angular.forEach($scope.resultData, function(rdItem) {
                if(freeSL.ServiceName === rdItem.ServiceName){
                    angular.forEach($scope.resultDataOriginal, function(rdoItem) {
                        if(rdItem.ServiceName===rdoItem.ServiceName){
                            rdItem.ServicePrice = rdoItem.ServicePrice
                        }
                    });
                    if(rdItem.HasComplimentary === true){
                        $scope.removeComplimentary(rdItem);
                    }
                }
            });
        });

    };

    $scope.selectedCheckbox = function(check, row) {
//checking if checked or unchecked

        if (check === true) {
            $scope.selectedItems.push(row);
            $scope.clicked.push(row.ServiceName);
            if(row.HasComplimentary === true){
                $scope.hasComplimentary(row);
            }
            $scope.UPSTotal = $scope.UPSTotal + parseFloat(row.ServicePrice);
            $scope.TA = $scope.UPSTotal + $scope.GST;
            //$scope.sum = parseFloat($scope.sum) + parseFloat(row.ServicePrice);
        } else {
            $scope.UPSTotal = $scope.UPSTotal - parseFloat(row.ServicePrice);
            $scope.TA = $scope.UPSTotal + $scope.GST;
            //$scope.sum = parseFloat($scope.sum) - parseFloat(row.ServicePrice);
            for(i=0; i<$scope.clicked.length;i++)
            {
                if(row.ServiceName === $scope.clicked[i]){
                    $scope.clicked.splice(i,1);
                    $scope.checked[row.ServiceName] = false;
                }

            }
            for(i=0; i<$scope.selectedItems.length;i++) {
                if($scope.selectedItems[i].ServiceName === row.ServiceName){
                    $scope.selectedItems.splice(i,1);
                    $scope.checked[row.ServiceName] = false;
                }
            }
            if(row.HasComplimentary === true){
                console.log(row);
                $scope.removeComplimentary(row);
            }
        }

        angular.forEach($scope.selectedItems, function(item) {
            if(item.HasComplimentary === true){
                $scope.hasComplimentary(item);
            }
        });
        angular.forEach($scope.clicked, function(item) {
            $scope.checked[item] = true;
        });
    };

    $scope.isEmpty = function(obj) {

        if (obj == null) return true;
        if (obj.length > 0)    return false;
        if (obj.length === 0)  return true;
        return true;
    };


    $scope.UPSdescription = {
        "Priority Visa" : "Expedite the processing and delivery of your passport and visa within a quicker timeframe.",
        "Passport Passback" : "This service allows applicants only in certain countries applying for a UK visa to complete the submission process while they have the option of not submitting their passport at the time of visa lodgement but submitting the passport at a later date when it is requested by the local post. This enables such applicants to use their passport for applying for visas of other countries while their application is concurrently under process for a UK visa or travel abroad as the case may be. This service is primarily targeted at frequent travellers and is subject to the local eligibility criteria stipulated by the Authority",
        "Premium Lounge" : "Separate lounge with personalised service by dedicated staff, Refreshments, Faster submission of applications at the visa application centre, SMS alert on the status of your application",
        "VFS Provided Courier Service" : "Have your passport and documents delivered back to you at the venue of your choice.",
        "SMS Service" : "The SMS service updates customers in India on the progress of their UK visa applications. The easy to use SMS service sends an automated message to the applicant's mobile phone at various stages of the visa application process. This is followed up with an automated email message to the applicant's email informing them of the status of their visa application. The SMS text is available in English."
    };

    $scope.UPSeligibility = {
        "Priority Visa" : "Customers may request this service if they are 1) Applying for a visitor visa (excluding student visas 2) Have travelled without difficulty in the last five years to one of the following countries: UK, USA, Australia, New Zealand, Canada or a Schengen country. 3)Domestic workers, who have travelled previously to the UK with their current employer 4) Employees of companies that are members of the Business Express Programme (managed by UK Trade and Investment in India) and are travelling as an official business visitor and Tier 2 category 5) Employees of companies featuring on the Premium Sponsors List",
        "SMS Service" : "If you have the DND (Do not Disturb) service activated on your mobile number, you may not receive the messages updating your application status.",
        "VFS Provided Courier Service" : "Any applicant applying for Visa can opt for the Courier service"
    };
    $scope.nextPage = function() {
        angular.forEach($scope.resultData, function(item) {
            var selectedVal = document.getElementById(item.ServiceName).checked;
            if(selectedVal === true){
                $scope.allObj.items.push(item);
            }
        });

        $localStorage.selectedItems = $scope.allObj.items;

        var str = JSON.stringify($scope.allObj.items);
        var pos= str.search("Courier");
        //console.log(pos);
        if(pos === -1){}
        else{
            $localStorage.CourierSelected = true;
        }

        for (i = 0; i < $scope.allObj.items.length; i++) {
            $scope.sum = $scope.sum + parseInt($scope.allObj.items[i].ServicePrice);
            //console.log($scope.allObj.items[i].ServicePrice);
        }
        $localStorage.AMOUNT = $scope.sum;

        var payServices = {
            Currency: "INR",
            TotalAmount: $scope.sum
        };
        var ServiceList = null;
        angular.forEach($localStorage.selectedItems, function(item) {
            if(item.ServiceName == "VFS Provided Courier Service"){
                var service = {
                    "ServiceName": item.ServiceName,
                    "ServiceId": item.ServiceId,
                    "Price": item.ServicePrice,
                    "Tax": 0,
                    "BankCharges": 0,
                    "Total": item.ServicePrice,
                    "Address": {}
                };
            }else{
                var service = {
                    "ServiceName": item.ServiceName,
                    "ServiceId": item.ServiceId,
                    "Price": item.ServicePrice,
                    "Tax": "0",
                    "BankCharges": "0",
                    "Total": item.ServicePrice,
                    "Address": null
                };
            }
            if(ServiceList == null){
                ServiceList = [];
            }
            ServiceList.push(service);
        });


        payServices.ServiceList = ServiceList;
        payServices.TotalAmount = parseInt($scope.sum);

        var Payment = {
            "TokenNumber":null,
            "TransactionId": null,
            "Status": null
        };

        $scope.additionalFields = {
            "PassportExpiryDate": $localStorage.detailsArray[9].DataValue,
            "PassportIssueDate": null,
            "SubVisaCategoryCode": $scope.categDetails.SubVisaCategoryCode,
            "SubVisaCategory": $scope.categDetails.SubVisaCategory,
            "VisaCategory": $scope.categDetails.VisaCategory,
            "VisaCategoryCode": $scope.categDetails.VisaCategoryCode,
            "ProcessingFeeID": null,
            "BankInstrumentsID": null,
            "VisaFee" : null,
            "ProcessingFee" : null,
            "BankInstruments" : null
        };

        $localStorage.outputFile.IdentityInformationPacket.VAF.AdditionalFields = $scope.additionalFields;
        $localStorage.outputFile.IdentityInformationPacket.VAF.Payment = Payment;
        $localStorage.outputFile.IdentityInformationPacket.VAF.VAS = payServices;
        console.log($localStorage.outputFile.IdentityInformationPacket.VAF);

        $state.go('courierDetails');

    };

    $scope.back = function(){
            $state.go('Details');
    };
}]);
